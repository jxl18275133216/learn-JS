<JavaScript>
	<day1>
		显示数据
		windows.alert();弹出警告框
		document.write();将内容写在html文档中
		innerHTML写入到html元素中
		console.log()写入到浏览器的控制台
	</day1>
	<day2>
		<one>
			let变量,let声明的变量只在其声明的块域或子块中可用,let与var 区别见测试文件
			同一个function 中不能同时存在let和var,否则function不能执行
			let可以简化函数内部代码
		</one>
		<two>
			//1.js中的数据类型有:
			//string、number、boolean、array、object、null、undefined
			2.变量:
			js中变量分全局变量和局部变量
			变量的声明周期都是从它们被声明时开始，局部变量会在函数执行完毕后被删除，全局变量则是网页被关闭之后被删除
			如果一个未被声明的变量被赋值，该变量会自动成为全局变量，哪怕它是在函数中执行的
			3.js作用域:
			4.js事件
			5.== 和===
			6.js运算和比较、逻辑运算
			7.标签引用
				通过给一个语句加标签，就可以给这个语句加一个名字，这样在程序任何地方都可以调用这个名字来使用该语句
			8.null、undefined的区别
			typeof null      //object
			typeof undefined //undefined
			null===undefined //false
			null==undefined //true
		</two>
	</day2>
	<day3>
		<one>
			JS的数据类型:
			五种数据类型:string、number、boolean、object、function
			三种对象类型:Object、Date、Array
			二中不包含值的数据类型:null undefined
			typeof 和 instanceof
		</one>
		<two>
			正则表达式，我不会，我没有
		</two>
		<three>
			try...catch 以及throw
		</three>
		<four>
			JS中，函数及变量的声明都将被提升到函数的最顶部
			js中，变量可以在使用后声明
			js中分号不是必须得，js会自动在完成的语句后面添加一个分号，但是，这样可能会导致代码运行的结果与预期不符，所以最好手动显示的添加分号
		</four>
		<five>
			表单验证
			1.使用function return false
			2.自动验证 required="required"
			数据验证
		</five>
		<six>
			JSON:
			一种轻量级的数据交换格式，数据是键值对，数据有逗号分隔，大括号保存对象，方括号保存数组
		</six>
		<seven>
			javascript:void();
			void()仅仅代表不返回任何值，但是里面的表达式还是会执行
			void()指定要计算一个表达式但是不会返回任何值
		</seven>
	</day3>
	JS函数
	<day4>
		<one>
			function
		</one>
		<two>
			HTML DOM
		</two>
		<three>
			JS对象:
			博大精深，学不动啊
		</three>
	</day4>
	<day5>
		<one>
			
		</one>
	</day5>
</JavaScript>