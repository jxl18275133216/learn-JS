2018.10.8

JavaScript的基础
简介
	JavaScript是一种轻量级的编程语言，可插入html页面，由现代所有列浏览器执行
作用
	1.在html页面上进行输出
	2.控制html元素
	3.对html页面上的事件进行反应
	4.验证信息

显示数据
	windows.alert();弹出警告框
	document.write();将内容写在html文档中
	innerHTML写入到html元素中
	console.log()写入到浏览器的控制台

input标签中输入框的值为参数value

JavaScript拥有动态类型
	var x
	x = 6 //x是数字型
	x = 'name' //x是字符串
 = //赋值
 == //值相等
 === //类型和值相等

 2018.10.9

 异常处理
 try...catch..
 throw

 HTML DOM
	JavaScript可以改变页面中的所有html元素、属性、样式并对所有事件作出反应
	注.修改样式的时候不能从获取样式的属性的值，然后修改这个值来修改样式，必须得使用style.property的方式来修改样式的属性值		PS.每个js代码块都进行try.catch处理

	添加和删除节点
		添加节点：必须先创建改元素(元素节点)，然后向某个已存在的节点进行追加
		删除节点：必须先找到想删除的节点的父节点，然后通过父节点删除该节点
	阻止冒泡事件：
		evet.stopPropagation();
 2018.10.10
 	工作
 2018.10.11
 	javaScript对象
 		JavaScript提供多个内置对象(String,Date,Array等)，对象只是带有属性和方法的特殊数据类型
 	创建对象方法
 		定义并创建对象实例
 		构造函数，通过函数去实例化对象
 		两种创建方式都需要通过new的方式创建一个对象

 	JavaScript是面向对象的语言，但是JavaScript没有类，而是基于prototype

 	JavaScript的for...in循环
 		for(对象中的变量){
 			执行的代码
 		}
 	for...in循环中的代码块将针对对象的每个属性都执行一次

 	数字类型:
 		JavaScript只有一种数字类型，均为64位
 		精度：整数15位，小数17位(但是浮点运算不总是100%准确)
 	创建数字类型对象
 	 	var nu = new Number(value)//返回一个值为value的number对象
 	 	var nu = Number(value)//将value转换为一个数值并返回，如果转换失败，返回NaN

 	字符串对象:http://www.w3school.com.cn/jsref/jsref_obj_string.asp
 	日期对象:
 	数组:
 	逻辑:
 		0 —— false
 		1 —— true
 		空字符串 —— false
 		null —— false
 		NaN —— false
 		'false' —— true
 		underfinded —— false
 	以下代码创建初始值为false的逻辑对象
 		var myBoolean=new Boolean();
		var myBoolean=new Boolean(0);
		var myBoolean=new Boolean(null);
		var myBoolean=new Boolean("");
		var myBoolean=new Boolean(false);
		var myBoolean=new Boolean(NaN);
	以下代码创建初始值为true的逻辑对象
		var myBoolean=new Boolean(1);
		var myBoolean=new Boolean(true);
		var myBoolean=new Boolean("true");
		var myBoolean=new Boolean("false");
		var myBoolean=new Boolean("Bill Gates");
	Math对象——随机数
		常用有
		Math.round()__取整\Math.random()__[0,1）的小数
	RegExp对象

	浏览器对象模型(BOM)
2018.10.12
	偷懒了
2018.10.13
	啊！为什么不看书
2018.10.14
	游戏真好玩
2018.10.15
	感冒
2018.10.16
	null == undefinde //true
	null === underfinde //false
	typeOf null //object
	typeOf underfinde //underfinde

	DOM对象是文档对象模型
		文档——标签文档、对象——文档中的每个元素、模型——抽象化的东西
	当网页被创建的时候，浏览器会创建DOM对象，这种模型为树模型

	window对象
		所有浏览器都支持window对象，window对象表示浏览器中打开的窗口
		所有JavaScript全局变量、函数、变量均自动变成window对象的成员
		全局变量是window对象的属性
		全局函数是window对象的方法
		(HTML DOM的document也是window对象的属性之一)

		window.open('','','','') //参数一是地址、参数二是打开的方式、参数三是控制打开窗口的格式
								 //open方法有返回值，返回值为新打开的窗口

		确定浏览器窗口的尺寸(浏览器的视口——浏览器文档显示区——肉眼可见部分的，不包括工具栏和滚动条)
			innerHeight/innerWidth wiindow的只读属性
			这个尺寸是你当前能看见的部分，尺寸大小根据窗口文档可视部分会改变
		
		window.screen对象包含有关用户屏幕的信息
			screen.availHeight
			screen.avaliWidth  (返回访问者屏幕的高/宽度，减去了界面特性——如窗口任务栏等)
			该尺寸不会改变(改尺寸是固定的728*1366)

		window.location对象，地址栏对象
			location.assgin('地址')方法会将整个页面重新打开为参数提供的地址页面

		window.history 为了保护隐私，对JavaScript访问该对象做了限制
			history.back()
			history.forward()

		window.navigator(包含有关者访问浏览器的信息) 该信息可被修改，具有误导性，不应该被用于检测浏览器版本

		消息框 
			alert()——警告框
			confirm()——确认框，点击确认返回true、点击取消返回false
			prompt()——提示框，点击确认返回输出的值、点击取消返回null

		计时器
			setInterval()  clearInterval(intervalid)
			setTimeout()  clearTimeout(timeoutid)

		计时器事件
			setInterval(function,milliseconds);——第一个参数是函数，第二个参数是时间间隔
			setTimeout(function,milliseconds);——第一个参数是函数，第二个参数是等待时间
2018.10.17
	工作
2018.10.18
	工作
2018.10.19
	工作
2018.10.20
	怠惰了啊，没复习
2018.10.21
	怎么能这么怠惰！

	——dota真好玩
2018.10.22
	cookie
	创建cookie
	document.cookie = 以键值对形式存在
	删除cookie
	document.cookie = cookiename = cookievalue;expires = 过期cookie时间

	火狐浏览器无法设置expires,所以代码需要额外注意(即使设置了也无法查看)
	火狐可以不需要服务器来测试代码，chmore需要服务器来测试代码
2018.10.23
2018.12.11
	动态绑定事件
	